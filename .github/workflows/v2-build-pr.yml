name: V2 Build PR

on:
  pull_request:
    branches: [master, dev]

permissions:
  contents: read

concurrency:
  group: build-v2-demos-${{ github.event.pull_request.head.sha }}
  cancel-in-progress: true

jobs:
  identify-changed-demos:
    runs-on: ubuntu-latest
    outputs:
      updated: ${{ steps.get-changed-demos.outputs.updated }}
      deleted: ${{ steps.get-changed-demos.outputs.deleted }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get changed demos
        id: get-changed-demos
        uses: ./.github/actions/get-changed-demos

      - name: Output changed demos
        run: |
          echo "Updated Demos: ${{ steps.get-changed-demos.outputs.updated }}"
          echo "Deleted Demos: ${{ steps.get-changed-demos.outputs.deleted }}"

      - name: Exit if no changes
        if: steps.get-changed-demos.outputs.updated == ''
        run: |
          echo "No changes found in demos. Exiting workflow."
          exit 1

  build-updated-demos:
    uses: ./.github/workflows/v2-build-demos.yml
    needs: identify-changed-demos
    with:
      ref: ${{ github.event.pull_request.head.sha }}
      demo-names: ${{ needs.identify-changed-demos.outputs.updated }}
      dev: ${{ github.event.pull_request.base.ref == 'dev' }}
      save-artifact: true
      artifact-name: demo-build-${{ github.event.pull_request.head.sha }}
      keep-going: false
      quiet: false
      batch_size: 10

  save-build-info-artifacts:
    runs-on: ubuntu-latest
    needs: [identify-changed-demos, build-updated-demos]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create PR Info Artifact
        run: |
          echo "PR_NUMBER=${{ github.event.pull_request.number }}" > pr-info.txt
          echo "SLUGS=${{ needs.identify-changed-demos.outputs.updated }}" >> pr-info.txt
          echo "DELETED=${{ needs.identify-changed-demos.outputs.deleted }}" >> pr-info.txt
          echo "BUILD_ID=${{ github.run_id }}" >> pr-info.txt
          echo "BRANCH=${{ github.event.pull_request.head.ref }}" >> pr-info.txt
          echo "COMMIT_SHA=${{ github.event.pull_request.head.sha }}" >> pr-info.txt
          echo "COMMIT_MESSAGE=${{ github.event.pull_request.title }}" >> pr-info.txt
          echo "COMMIT_URL=${{ github.event.pull_request.html_url }}" >> pr-info.txt
        
      - name: Upload PR Info Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-info
          path: pr-info.txt
          retention-days: 1

      - name: Create PR Comment Artifact
        id: create-comment
        run: |
          echo "## Your PR Preview(s) have been deployed for the following demos:" > pr-comment.md
          echo "" >> pr-comment.md
          IFS=',' read -ra SLUGS <<< "${{ needs.identify-changed-demos.outputs.updated }}"
          echo "<details>" >> pr-comment.md
          echo "<summary>Demo Previews</summary>" >> pr-comment.md
          echo "" >> pr-comment.md
          for slug in "${SLUGS[@]}"; do
              echo "- [https://www.pennylane.ai/qml/demo/$slug?preview=true](https://www.pennylane.ai/qml/demo/$slug?preview=true)" >> pr-comment.md
          done
          echo "" >> pr-comment.md
          echo "</details>" >> pr-comment.md

      - name: Upload PR Comment Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-comment
          path: pr-comment.md
          retention-days: 1
