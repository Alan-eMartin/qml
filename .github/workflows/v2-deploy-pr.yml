name: Deploy V2 Demo Previews on Pull Requests

on:
  workflow_run:
    workflows: ['Build V2 Demo Previews on Pull Requests']
    types:
      - completed

permissions:
  contents: read
  pull-requests: write

concurrency:
  group: build-v2-demos-${{ github.event.workflow_run.head_branch }}
  cancel-in-progress: true

jobs:
  deploy-preview-demos:
    uses: ./.github/workflows/v2-deploy-demos.yml
    with:
      environment: 'swc-staging' # Update this to production later if needed
      artifact-name: demo-build-${{ github.event.workflow_run.head_sha }}
      preview: true
      branch: ${{ github.event.workflow_run.head_branch }}
    secrets: inherit

  # comment-on-pr:
  #   runs-on: ubuntu-latest
  #   needs: [deploy-preview-demos]
  #   if: ${{ always() && github.event.workflow_run.conclusion == 'success' }}

  #   steps:
  #     - name: Check PR number exists
  #       id: check-pr
  #       run: |
  #         if [[ -z "${{ github.event.workflow_run.pull_requests[0].number }}" ]]; then
  #           echo "No PR info found â€” skipping comment."
  #           exit 0
  #         fi
  #       continue-on-error: true

  #     - name: Get PR number
  #       id: get-pr
  #       run: echo "pr_number=${{ github.event.workflow_run.pull_requests[0].number }}" >> $GITHUB_OUTPUT
  #       if: ${{ success() && github.event.workflow_run.pull_requests != '' }}

  #     - name: Download slugs artifact
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: demo-build-${{ github.event.workflow_run.head_sha }}
  #         path: dist

  #     - name: Read updated slugs from artifact
  #       id: slugs
  #       run: |
  #         echo "updated=$(jq -r '.[]' dist/slugs.json | paste -sd ' ' -)" >> $GITHUB_OUTPUT

  #     - name: Build PR Comment Body
  #       id: generate-comment
  #       run: |
  #         updated="${{ steps.slugs.outputs.updated }}"
  #         IFS=' ' read -r -a demos <<< "$updated"

  #         echo "**Thanks for the pull request!**" > comment.md
  #         echo "" >> comment.md
  #         echo "The following demos have been updated and deployed:" >> comment.md
  #         echo "" >> comment.md

  #         echo "<details><summary>Updated Demos</summary>" >> comment.md
  #         echo "" >> comment.md
  #         for demo in "${demos[@]}"; do
  #           echo "- [$demo](https://pennylane.ai/qml/demos/$demo?preview=true)" >> comment.md
  #         done
  #         echo "" >> comment.md
  #         echo "</details>" >> comment.md
  #         echo "" >> comment.md
  #         echo "_This comment updates automatically if you push more commits._" >> comment.md

  #         echo "comment_body<<EOF" >> $GITHUB_OUTPUT
  #         cat comment.md >> $GITHUB_OUTPUT
  #         echo "EOF" >> $GITHUB_OUTPUT

  #     - name: Comment on PR
  #       uses: XanaduAI/cloud-actions/create-and-update-pull-request-comment@main
  #       with:
  #         github_token: ${{ github.token }}
  #         pull_request_number: ${{ steps.get-pr.outputs.pr_number }}
  #         comment_body: ${{ steps.generate-comment.outputs.comment_body }}
